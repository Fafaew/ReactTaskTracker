{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fd4cf79.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n    \n\n    return (\n        <button\n            onClick = {onClick} \n            style={{backgroundColor: color}} \n            className='btn'\n            >\n                {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'blue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\n\nconst Header = ({ title, onAdd, showAdd }) => { \n  const location = useLocation()\n\n    return (\n        <header className='header'>\n          <h1>{title}</h1>  \n          {location.pathname === '/' && (\n          <Button \n          color ={showAdd ? 'red' : 'green'} \n          text={showAdd ? 'Close' : 'Add'} \n          onClick={onAdd} \n          />\n          )}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n  title:'Task Tracker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Link to=\"/about\">About</Link>\n            \n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => \n        onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style ={{color: 'red',\n             cursor: 'pointer'}} \n             onClick = {() => onDelete(task.id)}\n            />\n            </h3>                                         \n            <p>{task.day}</p>\n            \n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => { \n    return (\n        <>\n            {tasks.map((task) => (\n            <Task key={task.id} task = {task}\n            onDelete={onDelete} onToggle={onToggle}/>\n            ))}            \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit =\n        {onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task'\n                 value ={text}\n                 onChange = {(e) => setText(e.target.\n                 value)} \n                 />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add\n                 Day & Time' value ={day}\n                 onChange = {(e) => setDay(e.target.\n                 value)}  />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' \n                checked={reminder }\n                value ={reminder}\n                 onChange = {(e) => setReminder(e.currentTarget.\n                 checked)}  />\n            </div>\n\n            <input type='submit' value='Save Task' \n            className='btn ben-block'/>\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Verison 1.0.0</h4>\n            <Link to ='/'>Go Back</Link>            \n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          )}\n        />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}